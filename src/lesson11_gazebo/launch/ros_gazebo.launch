<launch>
    <arg name="model" default="$(find xacro)/xacro --inorder '$(find lesson11_gazebo)/urdf/sai_robot.urdf.xacro'" />
    
    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="false" />
        <arg name="gui" value="true" />
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="headless" value="false"/>
    </include>

    <!-- 把XACRO文件转化为URDF文件 -->
	<param name="robot_description" command="$(arg model)" />

    <!-- 设置GUI参数，显示关节控制插件 -->
    <param name="use_gui" value="true" />

    <!-- 添加Arbotix模拟配置信息 -->
    <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen">
        <rosparam file="$(find lesson8_arbotix)/config/arbotix.yaml" command="load" />
        <param name="sim" value="true" />
    </node>

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态 -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <!-- 运行robot_state_publisher节点，发布机器人的TF状态 -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

    <!-- 运行rviz可视化界面 -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find lesson8_arbotix)/config/config.rviz" required="true" /> -->

    <!-- 在gazebo中加载机器人模型 -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model sai_robot -param robot_description" />

    <!-- 添加键盘控制 -->
    <node name="keyboard" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
</launch>